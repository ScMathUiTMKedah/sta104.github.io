# Example of categorical data
gender <- c("Male", "Female", "Male", "Male", "Female")
table(gender)
# Example of numerical data
age <- c(25, 30, 35, 40, 45)
summary(age)
# Creating a simple relational database
library(DBI)
install.packages("DBI")
# Creating a simple relational database
library(DBI)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
install.packages("RSQLite")
# Creating a simple relational database
library(DBI)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con, "Employees", data.frame(ID = 1:3, Name = c("John", "Emily", "Michael")))
dbWriteTable(con, "Departments", data.frame(ID = c(1, 2), Department = c("HR", "Finance")))
dbListTables(con)
View(con)
# Load the ggplot2 package
library(ggplot2)
install.packages("ggplot2")
# Sample data
data <- data.frame(
Category = c("Category A", "Category B", "Category C", "Category D"),
Value = c(25, 35, 20, 30)
)
# Create pie chart
pie_chart <- ggplot(data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +   # Convert to polar coordinates (pie chart)
labs(title = "Pie Chart Example") +
theme_void()         # Remove background and grid lines
# Load the ggplot2 package
library(ggplot2)
# Sample data
data <- data.frame(
Category = c("Category A", "Category B", "Category C", "Category D"),
Value = c(25, 35, 20, 30)
)
# Create pie chart
pie_chart <- ggplot(data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +   # Convert to polar coordinates (pie chart)
labs(title = "Pie Chart Example") +
theme_void()         # Remove background and grid lines
# Display pie chart
print(pie_chart)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
# Load the ggplot2 package
library(ggplot2)
# Sample data
data <- data.frame(
Category = c("Category A", "Category B", "Category C", "Category D"),
Value = c(25, 35, 20, 30)
)
# Create pie chart
pie_chart <- ggplot(data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +   # Convert to polar coordinates (pie chart)
labs(title = "Pie Chart Example") +
theme_void()         # Remove background and grid lines
# Display pie chart
print(pie_chart)
# Load the ggplot2 package
library(ggplot2)
# Sample data
data <- data.frame(
Group = c("Group 1", "Group 2", "Group 3"),
Value1 = c(10, 15, 20),
Value2 = c(15, 20, 25),
Value3 = c(20, 25, 30)
)
# Reshape data for clustered and stacked bar charts
data_long <- tidyr::gather(data, key = "Category", value = "Value", -Group)
# Simple Bar Chart
simple_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "identity") +
labs(title = "Simple Bar Chart", x = "Group", y = "Value") +
theme_minimal()
# Clustered Bar Chart
clustered_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Clustered Bar Chart", x = "Group", y = "Value") +
theme_minimal()
# Stacked Bar Chart
stacked_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Stacked Bar Chart", x = "Group", y = "Value") +
theme_minimal()
# Display the plots
print(simple_bar)
print(clustered_bar)
print(stacked_bar)
# Load the ggplot2 package
library(ggplot2)
# Sample data
data <- data.frame(
Category = c("Category A", "Category B", "Category C", "Category D"),
Value = c(25, 35, 20, 30)
)
# Calculate percentages
data$Percentage <- round((data$Value / sum(data$Value)) * 100, 1)
# Create pie chart
pie_chart <- ggplot(data, aes(x = "", y = Value, fill = Category)) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +   # Convert to polar coordinates (pie chart)
labs(title = "Pie Chart Example") +
theme_void() +         # Remove background and grid lines
geom_text(aes(label = paste0(Category, "\n", Percentage, "%")),
position = position_stack(vjust = 0.5))
# Display pie chart
print(pie_chart)
# Load the ggplot2 package
library(ggplot2)
# Sample data
data <- data.frame(
Group = c("Group 1", "Group 2", "Group 3"),
Value1 = c(10, 15, 20),
Value2 = c(15, 20, 25),
Value3 = c(20, 25, 30)
)
# Reshape data for clustered and stacked bar charts
data_long <- tidyr::gather(data, key = "Category", value = "Value", -Group)
# Calculate percentages
data_long$Percentage <- round((data_long$Value / sum(data_long$Value)) * 100, 1)
# Simple Bar Chart
simple_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity") +
labs(title = "Simple Bar Chart", x = "Group", y = "Value") +
theme_minimal() +
geom_text(aes(label = paste0(Percentage, "%")),
position = position_stack(vjust = 0.5))
# Clustered Bar Chart
clustered_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Clustered Bar Chart", x = "Group", y = "Value") +
theme_minimal() +
geom_text(aes(label = paste0(Percentage, "%")),
position = position_dodge(width = 0.9), vjust = -0.5)
# Stacked Bar Chart
stacked_bar <- ggplot(data_long, aes(x = Group, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "stack") +
labs(title = "Stacked Bar Chart", x = "Group", y = "Value") +
theme_minimal() +
geom_text(aes(label = paste0(Percentage, "%")),
position = position_stack(vjust = 0.5))
# Display the plots
print(simple_bar)
print(clustered_bar)
print(stacked_bar)
renv::status()
?renv::status()
renv::restore("ggplot2")
renv::snapshot("ggplot2")
renv::restore("ggplot2")
renv::snapshot()
?renv::status()
renv::status()
